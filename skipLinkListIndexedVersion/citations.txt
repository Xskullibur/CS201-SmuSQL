ChatGPT4o Queries:
1. Below is the implementation of a singly linked list. Help me create the implementation of a skip linked list <insert implementation of java SLL>
2. explain your insert code
3. what does this line do: Node<E>[] update = new Node[levels];
4. help me create an 'add last' method into the skip link list implementation
5. how are tables stored and retrieved in H2 database?
6. format this into a better and more propre markdown file <insert smusql project handout under commands>
7. We are going to include more items in the readme file, such as team members, evaluation metrics, implementation logic etc. Please reformat the markdown such that they can be accounted for.
8. <insert my current Row.java> implement comparable in Row by id.
9. <insert Row.java> Let's allow rows to have other data in the form of a map, mapped by column name. How do i build other ways to index the database using the Objects involved in the columns of the row 
10. insert <
import java.util.*;
public class Table {
    String name;
    List<String> columns;
    SkipList<Row> data;

}  > Here is my db table, which has rows, and is implemented using skipList. Help me create the rest of the table for my database.
11. help me override the .equals method in row so that it is possible to search
12. should i store all the objects and id as string in the case that the primary key is not an integer?
13. Since all the column data are strings, help me create secondary indices based on the columns, which can be used to locate the row using the skip list structure
14. Change the secondary index implementation such that its map no longer stores duplicates, but instead the id of the original data
15. SkipList accepts a node<E>. Hence, help me create another class called 'Indexing' which implements comparable. The indexing contains String columnvalue, and String primaryKey which maps it to the original row
16. now help me build this indexing alongside the table as the values get inserted
17. help me create another method inside skipList where it gives all values below, equal to, or greater than, a specific value. Below is my current implementation of skip list. <insert SkipList.java>
18. what is enum? Using enum, give me the example of 3 values: equals, greater, below, and using it inside a function
19. the skip linked list should be able to handle duplicated values. Also, could you create 3 seperate methods for each comparison type, and do not use enum?
20. Work on just this method below. When building the result list, make sure to down to the lowest level which contains the value smaller than E value, then proceed to append to the result when there are equals. This will prevent earlier, but equal values from being missed, as the list contains duplicate values <insert public List<E> getValuesEqual(E value){...} method>
21. okay, the method is correct. Using these principles, help me create just the methods for get ValuesGreater, getValuesLesser, and getValuesBetween
22. Now help me create 5 more methods following those principles. These methods are:
getValuesGreaterOrEquals, getValuesLesserOrEquals, getValuesBetweenOrEquals, getValuesBetweenOrStartEquals, getValuesBetweenOrEndEquals
23. how do implement iterable in a skip linked list? Just give me the iterator mehtod
24. java maxint
25. help me change the compare function in Indexing such that it will compare the Strings as numbers if compatible with the column types. Otherwise compare as Strings 
26. how to convert String[] to List<String>
27. give me the the return statement for a successful create, select, update and delete operation being performed
28. give me the code for 'union' and 'intersection' in java
29. <insert Engine.java, Table.java> Help me create the java code for the smusql select statement and use a helper method to format it correctl
30. Here is my current code for engine. Since a lot hashing and comparisons are used, there might be bugs if the letters care cased differently. Help me change the code below such that smuSQL will always work regardless of casing. <insert Engine.java>
31. <insert image of error stack trace, and SkipList.java> help me debug.