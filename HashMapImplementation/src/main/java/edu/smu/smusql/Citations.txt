Queries made to GPT 4o to create HashMap implementation:

1. Chatgpt I want to implement a hashmap implementation for my project. The details for my project are as such: 
    - The rows are mapped by key, (id) then values would be the rows
    - All the columns would be an index that is also map the rows
    For example:
    if there is a row:
    id name age --> there would be 3 keys where the first key would map the id to the row
    Then the columns name and age would also be indexed to map the row so that a select statement based on the rows would just use the index.

    You may also work on the parsing of the user's input so that it may be able to parse in the user's input efficiently for the hashmap implementation.

    I will attach several files for you to refer to to start working on the project.
    <Attach table.java, engine.java, parser.java, and main.java from the sample>

    For the commands that I need, I would want you to do simple SELECT, UPDATE, CREATE, DELETE statements like this:
    6.1.1 CREATE TABLE
    Creates a new table with specific columns.
        • Syntax: CREATE TABLE table_name (column1, column2, ...)
        • Example: CREATE TABLE student (id, name, age, gpa, deans_list)
    Note that in our database system, columns do not have explicit typing; however, all data inserted into a column is expected to be of the same type.
    6.1.2 INSERT
    Inserts a new row into the specified table.
        • Syntax: INSERT INTO table_name VALUES (value1, value2, ...)
        • Example: INSERT INTO student VALUES (1, John, 30, 2.4, False)
    6.1.3 SELECT *
    Retrieves rows from the specified table.
        • Syntax: SELECT * FROM table_name
        • Example: SELECT * FROM student
    The SELECT * command can accept a WHERE clause, such that only rows fulfilling the condition(s) following the WHERE clause are returned. A second condition may be used, with the AND or OR clauses. Supported conditional operators include: =, <, >, <= and >=.
        • Syntax: SELECT * FROM table_name WHERE condition1 AND/OR condition2
        • Example: SELECT * FROM student WHERE gpa > 3.8
        • Example: SELECT * FROM student WHERE gpa > 3.8 AND age < 20
        • Example: SELECT * FROM student WHERE gpa > 3.8 OR age < 20
    6.1.4 UPDATE
    Updates rows fulfilling a specified condition from the specified table. Prints of number of rows updated.
        • Syntax: UPDATE table_name SET update WHERE condition1 AND/OR condition2
        • Example: UPDATE student SET age = 25 WHERE id = 1
        • Example: UPDATE student SET deans_list = True WHERE gpa > 3.8 OR age = 201
    6.1.5 DELETE
    Deletes rows fulfilling a specified condition from the specified table. Prints number of rows deleted.
        • Syntax: DELETE FROM table_name WHERE condition1 AND/OR condition2
        • Example: DELETE FROM student WHERE gpa < 2.0
        • Example: DELETE FROM student WHERE gpa < 2.0 OR name = little_bobby_tables

2. <Copy the wrong section> Hello chat gpt, this part causes a null pointer exception, please help me fix this I also attached the modified table.java and engine.java for you

3. Chatgpt, you forgot to include the operators for comparison, please do add it in the table.java

4. Do you know any ways to make this code more efficient?

5. The complex SELECT statement causes problem: <copy over code section and the error statement>

6. The comparisons still won't work are you able to help? Which files do you think I need to look add to fix the problem?

7. How would an evaluation method look like for each individual SQL operation?

8. Help me format the select statement results into a table with the each column having equal spaces through out its rows
